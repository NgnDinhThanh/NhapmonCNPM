/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.HoatDongJFrame;

import Bean.HoatDongBean;
import controllers.HoatDongController.AddNewHoatDongController;
import controllers.HoatDongController.MuonPhongBanController;
import controllers.HoatDongController.MuonTaiSanController;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import models.MuonPhongBan;
import models.MuonTaiSanModel;
import services.MysqlConnection;

/**
 *
 * @author Thanh.ND200592
 */
public class ThongTinSuDungJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ThongTinSuDungJFrame
     */
    private AddNewHoatDongController parentController;
    private JFrame parentFrame;
    private HoatDongBean hoatDongBean;
    private MuonTaiSanController controller;

    public ThongTinSuDungJFrame(JFrame parentJFrame) {
        this.parentController = parentController;
        this.parentFrame = parentJFrame;
        this.parentFrame.setEnabled(false);
        this.hoatDongBean = new HoatDongBean();
        initComponents();
        addTenHoatDong();
        initComboBox();
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setTitle("Thông tin sử dụng tài sản");
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn thoát??", "Warning!!", JOptionPane.YES_NO_OPTION) == 0) {
                    close();
                }
            }

        });
    }

    void close() {
        this.parentFrame.setEnabled(true);
        dispose();
    }

    private void addTenHoatDong() {
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String query = "SELECT MAX(ID) FROM hoat_dong";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet rs = preparedStatement.executeQuery();
            int max_value = 0;
            if (rs.next()) {
                max_value = rs.getInt(1);
            }
            txbIDHoatDong.setText(String.valueOf(max_value));
            txbIDHoatDong.setEnabled(false);
            preparedStatement.close();

            query = "SELECT TenHoatDong FROM hoat_dong WHERE ID = '" + txbIDHoatDong.getText() + "'";
            preparedStatement = connection.prepareStatement(query);
            rs = preparedStatement.executeQuery();
            while (rs.next()) {
                txbTenHoatDong.setText(rs.getString("TenHoatDong"));
                txbTenHoatDong.setEnabled(false);
            }
            preparedStatement.close();
        } catch (Exception e) {
        }
    }

    private void initComboBox() {
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String query = "SELECT TenTaiSan FROM tai_san";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet rs = preparedStatement.executeQuery();
            while (rs.next()) {
                taiSanjComboBox.addItem(rs.getString("TenTaiSan"));
            }
            preparedStatement.close();

            query = "SELECT TenPhong FROM phong_ban WHERE TrangThai IS NULL";
            preparedStatement = connection.prepareStatement(query);
            rs = preparedStatement.executeQuery();
            while (rs.next()) {
                phongBanjComboBox.addItem(rs.getString("TenPhong"));
            }
            preparedStatement.close();
            connection.close();
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        taisanPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txbMuon = new javax.swing.JTextField();
        AcceptBtnTs = new javax.swing.JButton();
        txbTenTaiSan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txbCount = new javax.swing.JTextField();
        taiSanjComboBox = new javax.swing.JComboBox<>();
        txbID = new javax.swing.JTextField();
        phongbanPanel = new javax.swing.JPanel();
        AcceptBtnPb = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txbTang = new javax.swing.JTextField();
        txbSoPhong = new javax.swing.JTextField();
        phongBanjComboBox = new javax.swing.JComboBox<>();
        txbTenPhong = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txbIDHoatDong = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txbTenHoatDong = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(699, 601));

        taisanPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        taisanPanel.setPreferredSize(new java.awt.Dimension(675, 220));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Mã tài sản");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Tên tài sản");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Số lượng mượn");

        txbMuon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        AcceptBtnTs.setBackground(new java.awt.Color(255, 255, 255));
        AcceptBtnTs.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AcceptBtnTs.setText("Xác nhận");
        AcceptBtnTs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBtnTsActionPerformed(evt);
            }
        });

        txbTenTaiSan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Số lượng hiện có");

        txbCount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        taiSanjComboBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        taiSanjComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                taiSanjComboBoxItemStateChanged(evt);
            }
        });

        txbID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout taisanPanelLayout = new javax.swing.GroupLayout(taisanPanel);
        taisanPanel.setLayout(taisanPanelLayout);
        taisanPanelLayout.setHorizontalGroup(
            taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taisanPanelLayout.createSequentialGroup()
                .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(taisanPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(taisanPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txbID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(taisanPanelLayout.createSequentialGroup()
                                .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txbMuon)
                                    .addComponent(txbCount)
                                    .addGroup(taisanPanelLayout.createSequentialGroup()
                                        .addComponent(txbTenTaiSan, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(taisanPanelLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(taiSanjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(146, 146, 146)
                .addComponent(AcceptBtnTs, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        taisanPanelLayout.setVerticalGroup(
            taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taisanPanelLayout.createSequentialGroup()
                .addComponent(taiSanjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taisanPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AcceptBtnTs))
                    .addGroup(taisanPanelLayout.createSequentialGroup()
                        .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txbTenTaiSan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txbID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txbCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(taisanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txbMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        phongbanPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        phongbanPanel.setPreferredSize(new java.awt.Dimension(0, 220));

        AcceptBtnPb.setBackground(new java.awt.Color(255, 255, 255));
        AcceptBtnPb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AcceptBtnPb.setText("Xác nhận");
        AcceptBtnPb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBtnPbActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Số phòng");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Tầng");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Tên phòng");

        txbTang.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        txbSoPhong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        phongBanjComboBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        phongBanjComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                phongBanjComboBoxItemStateChanged(evt);
            }
        });

        txbTenPhong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout phongbanPanelLayout = new javax.swing.GroupLayout(phongbanPanel);
        phongbanPanel.setLayout(phongbanPanelLayout);
        phongbanPanelLayout.setHorizontalGroup(
            phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phongbanPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AcceptBtnPb, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(phongbanPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txbTang)
                    .addComponent(txbSoPhong)
                    .addComponent(phongBanjComboBox, 0, 200, Short.MAX_VALUE)
                    .addComponent(txbTenPhong))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        phongbanPanelLayout.setVerticalGroup(
            phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, phongbanPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(phongBanjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txbTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txbSoPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(phongbanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txbTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AcceptBtnPb)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Thông tin mượn tài sản:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Thông tin mượn phòng ban:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Mã hoạt động");

        txbIDHoatDong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Tên hoạt động");

        txbTenHoatDong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phongbanPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(taisanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txbIDHoatDong, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txbTenHoatDong)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txbIDHoatDong, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txbTenHoatDong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(taisanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(phongbanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void taiSanjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_taiSanjComboBoxItemStateChanged
        txbTenTaiSan.setEnabled(false);
        txbCount.setEnabled(false);
        txbID.setEnabled(false);
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String sql = "SELECT * FROM tai_san WHERE TenTaiSan = '" + taiSanjComboBox.getSelectedItem() + "'";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            ResultSet rs = preparedStatement.executeQuery();
            while (rs.next()) {
                txbTenTaiSan.setText(rs.getString("TenTaiSan"));
                txbID.setText(rs.getInt("ID") + "");
                txbCount.setText(rs.getInt("SoLuongConLai") + "");
            }
            preparedStatement.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_taiSanjComboBoxItemStateChanged

    private void phongBanjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_phongBanjComboBoxItemStateChanged
        txbSoPhong.setEnabled(false);
        txbTang.setEnabled(false);
        txbTenPhong.setEnabled(false);
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String query = "SELECT * FROM phong_ban WHERE TenPhong = '" + phongBanjComboBox.getSelectedItem() + "'";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet rs = preparedStatement.executeQuery();
            while (rs.next()) {
                txbTenPhong.setText(rs.getString("TenPhong"));
                txbSoPhong.setText(rs.getInt("SoPhong") + "");
                txbTang.setText(rs.getInt("Tang") + "");
            }
            preparedStatement.close();
            connection.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_phongBanjComboBoxItemStateChanged

    private boolean check() {
        if (txbMuon.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy nhập số lượng muốn mượn");
            return false;
        }
        if (Integer.parseInt(txbMuon.getText()) > Integer.parseInt(txbCount.getText())) {
            JOptionPane.showMessageDialog(null, "Bạn không thể mượn nhiều hơn số lượng hiện có");
            return false;
        }
        return true;
    }

    private void MuonTs() {
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String query = "UPDATE tai_san SET SoLuongConLai = SoLuongConLai - '" + Integer.parseInt(txbMuon.getText()) + "' WHERE ID = '" + Integer.parseInt(txbID.getText()) + "'";
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void MuonPb() {
        try {
            Connection connection = MysqlConnection.getMysqlConnection();
            String query = "UPDATE phong_ban SET TrangThai='Đã được mượn' WHERE SoPhong = '"+ Integer.parseInt(txbSoPhong.getText()) +"' ";
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void AcceptBtnTsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBtnTsActionPerformed
        if (check()) {
            try {
                MuonTaiSanModel temp = new MuonTaiSanModel();
                temp.setIdHoatDong(Integer.parseInt(txbIDHoatDong.getText()));
                temp.setIdTaiSan(Integer.parseInt(txbID.getText()));
                temp.setTenTaiSan(txbTenTaiSan.getText());
                temp.setSoLuongMuon(Integer.parseInt(txbMuon.getText()));

                MuonTaiSanController muon = new MuonTaiSanController();
                if (muon.muonTaiSan(temp)) {
                    JOptionPane.showMessageDialog(null, "Mượn thành công");
                    MuonTs();
                    txbMuon.setText("");

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Có lỗi xảy ra. Hãy kiểm tra lại", "Warning", JOptionPane.WARNING_MESSAGE);

                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_AcceptBtnTsActionPerformed

    private void AcceptBtnPbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBtnPbActionPerformed
        try {
            MuonPhongBan temp = new MuonPhongBan();
            temp.setIdHoatDong(Integer.parseInt(txbIDHoatDong.getText()));
            temp.setSoPhong(Integer.parseInt(txbSoPhong.getText()));
            temp.setTang(Integer.parseInt(txbTang.getText()));
            temp.setTenPhong(txbTenPhong.getText());
            MuonPhongBanController phongBanController = new MuonPhongBanController();
            if (phongBanController.muonPhongBan(temp)) {
                JOptionPane.showMessageDialog(null, "Mượn thành công");
                MuonPb();

            } else {
                JOptionPane.showMessageDialog(rootPane, "Có lỗi xảy ra. Hãy kiểm tra lại", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }//GEN-LAST:event_AcceptBtnPbActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptBtnPb;
    private javax.swing.JButton AcceptBtnTs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> phongBanjComboBox;
    private javax.swing.JPanel phongbanPanel;
    private javax.swing.JComboBox<String> taiSanjComboBox;
    private javax.swing.JPanel taisanPanel;
    private javax.swing.JTextField txbCount;
    private javax.swing.JTextField txbID;
    private javax.swing.JTextField txbIDHoatDong;
    private javax.swing.JTextField txbMuon;
    private javax.swing.JTextField txbSoPhong;
    private javax.swing.JTextField txbTang;
    private javax.swing.JTextField txbTenHoatDong;
    private javax.swing.JTextField txbTenPhong;
    private javax.swing.JTextField txbTenTaiSan;
    // End of variables declaration//GEN-END:variables
}
